@model TechnoCraftSchool_Model.Students

@{
    ViewBag.Title = "Create";
}

<div class="row">
    <!-- left column -->
    <div class="col-md-12">
        <div class="box box-primary">
            <div class="box-header with-border">
                <h3 class="box-title"> Add New Student </h3>
            </div>
        </div>
        <!-- general form elements -->
        <div class="panel panel-flat">
            <div class="panel-heading">
                <div class="panel-body">
                    <div class="tabbable">
                        <div class="tab-content">
                            @using (Html.BeginForm("Create", "Students", FormMethod.Post, new { enctype = "multipart/form-data" }))
                            {
                                @Html.AntiForgeryToken()

                                <div id="top-divided-tab1" class="tab-pane active">
                                    @Html.ValidationSummary(true, "", new { @class = "callout callout-danger" })
                                    <br />
                                    <div class="row">
                                        <div class="col-md-12">
                                            <div class="box box-primary">
                                                <div class="box-header with-border">
                                                    <h3 class="box-title">Personal Details</h3>
                                                </div>
                                            </div>
                                            <div class="box-body">
                                                <div class="col-xs-4">
                                                    <div class="form-group">
                                                        @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label" })
                                                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                                                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                                <div class="col-xs-4">
                                                    <div class="form-group">
                                                        @Html.LabelFor(model => model.MiddleName, htmlAttributes: new { @class = "control-label" })
                                                        @Html.EditorFor(model => model.MiddleName, new { htmlAttributes = new { @class = "form-control" } })
                                                        @Html.ValidationMessageFor(model => model.MiddleName, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                                <div class="col-xs-4">
                                                    <div class="form-group">
                                                        @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label" })
                                                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                                                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>

                                                <div class="col-xs-2">
                                                    <div class="form-group">
                                                        @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label" })
                                                        @Html.DropDownListFor(model => model.Gender, (IEnumerable<SelectListItem>
                                                        )ViewBag.Gender, new { @class = "form-control hide-search" })
                                                    </div>
                                                </div>
                                                <div class="col-xs-2">
                                                    <div class="form-group">
                                                        @Html.LabelFor(model => model.BloodGroup, htmlAttributes: new { @class = "control-label" })
                                                        @Html.DropDownListFor(model => model.BloodGroup, (IEnumerable<SelectListItem>
                                                        )ViewBag.BloodGroup, new { @class = "form-control hide-search" })
                                                    </div>
                                                </div>
                                                <div class="col-xs-4">
                                                    <div class="form-group">
                                                        @Html.LabelFor(model => model.Date_of_Birth, htmlAttributes: new { @class = "control-label" })
                                                        @Html.EditorFor(model => model.Date_of_Birth, new { htmlAttributes = new { @class = "form-control datepicker" } })
                                                        @Html.ValidationMessageFor(model => model.Date_of_Birth, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                                <div class="col-xs-4">
                                                    <div class="form-group">
                                                        @Html.LabelFor(model => model.BirthPlace, htmlAttributes: new { @class = "control-label" })
                                                        @Html.EditorFor(model => model.BirthPlace, new { htmlAttributes = new { @class = "form-control" } })
                                                        @Html.ValidationMessageFor(model => model.BirthPlace, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                                <div class="col-xs-4">
                                                    <div class="form-group">
                                                        @Html.LabelFor(model => model.StudentPhoto, htmlAttributes: new { @class = "control-label" })
                                                        <input type="file" name="StudentPhoto" id="StudentPhoto" class="form-control" />
                                                        @Html.ValidationMessageFor(model => model.StudentPhoto, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>


                                                <div class="col-xs-2">
                                                    <div class="form-group">
                                                        @Html.LabelFor(model => model.CasteName, htmlAttributes: new { @class = "control-label" })
                                                        @Html.EditorFor(model => model.CasteName, new { htmlAttributes = new { @class = "form-control" } })
                                                        @Html.ValidationMessageFor(model => model.CasteName, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>

                                                <div class="col-xs-2">
                                                    <div class="form-group">
                                                        @Html.LabelFor(model => model.CasteCategory, htmlAttributes: new { @class = "control-label" })
                                                        @Html.EditorFor(model => model.CasteCategory, new { htmlAttributes = new { @class = "form-control" } })
                                                        @Html.ValidationMessageFor(model => model.CasteCategory, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                                <div class="col-xs-2">
                                                    <div class="form-group">
                                                        @Html.LabelFor(model => model.MotherTongue, htmlAttributes: new { @class = "control-label" })
                                                        @Html.EditorFor(model => model.MotherTongue, new { htmlAttributes = new { @class = "form-control" } })
                                                        @Html.ValidationMessageFor(model => model.MotherTongue, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                                <div class="col-xs-2">
                                                    <div class="form-group">
                                                        @Html.LabelFor(model => model.Religion, htmlAttributes: new { @class = "control-label" })
                                                        @Html.EditorFor(model => model.Religion, new { htmlAttributes = new { @class = "form-control" } })
                                                        @Html.ValidationMessageFor(model => model.Religion, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                                <div class="col-xs-2">

                                                    <div class="form-group">
                                                        @Html.LabelFor(model => model.Nationality, htmlAttributes: new { @class = "control-label" })
                                                        @Html.EditorFor(model => model.Nationality, new { htmlAttributes = new { @class = "form-control" } })
                                                        @Html.ValidationMessageFor(model => model.Nationality, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </div>
                                        </div>

                                        <div class="col-md-12">
                                            <div class="box box-primary">
                                                <div class="box-header with-border">
                                                    <h3 class="box-title">Contact Details</h3>
                                                </div>
                                            </div>
                                            <div class="col-sm-6">
                                                <div class="panel panel-default">
                                                    <div class="panel-body">
                                                        <div class="form-group">
                                                            @Html.LabelFor(model => model.PermanentAddress, htmlAttributes: new { @class = "control-label" })
                                                            @Html.EditorFor(model => model.PermanentAddress, new { htmlAttributes = new { @class = "form-control" } })
                                                            @Html.ValidationMessageFor(model => model.PermanentAddress, "", new { @class = "text-danger" })
                                                        </div>

                                                        <div class="form-group">
                                                            @Html.LabelFor(model => model.PermanentCity, htmlAttributes: new { @class = "control-label" })
                                                            @Html.EditorFor(model => model.PermanentCity, new { htmlAttributes = new { @class = "form-control" } })
                                                            @Html.ValidationMessageFor(model => model.PermanentCity, "", new { @class = "text-danger" })
                                                        </div>

                                                        <div class="form-group">
                                                            @Html.LabelFor(model => model.PermanentTaluka, htmlAttributes: new { @class = "control-label" })
                                                            @Html.EditorFor(model => model.PermanentTaluka, new { htmlAttributes = new { @class = "form-control" } })
                                                            @Html.ValidationMessageFor(model => model.PermanentTaluka, "", new { @class = "text-danger" })
                                                        </div>

                                                        <div class="form-group">
                                                            @Html.LabelFor(model => model.PermanentDistrict, htmlAttributes: new { @class = "control-label" })
                                                            @Html.EditorFor(model => model.PermanentDistrict, new { htmlAttributes = new { @class = "form-control" } })
                                                            @Html.ValidationMessageFor(model => model.PermanentDistrict, "", new { @class = "text-danger" })
                                                        </div>

                                                        <div class="form-group">
                                                            @Html.LabelFor(model => model.PermanentPhone, htmlAttributes: new { @class = "control-label" })
                                                            @Html.EditorFor(model => model.PermanentPhone, new { htmlAttributes = new { @class = "form-control" } })
                                                            @Html.ValidationMessageFor(model => model.PermanentPhone, "", new { @class = "text-danger" })
                                                        </div>
                                                        <div class="form-group">
                                                            @Html.LabelFor(model => model.StudentPhone, htmlAttributes: new { @class = "control-label" })
                                                            @Html.EditorFor(model => model.StudentPhone, new { htmlAttributes = new { @class = "form-control" } })
                                                            @Html.ValidationMessageFor(model => model.StudentPhone, "", new { @class = "text-danger" })
                                                        </div>

                                                        <div class="form-group">
                                                            @Html.LabelFor(model => model.FatherPhone, htmlAttributes: new { @class = "control-label" })
                                                            @Html.EditorFor(model => model.FatherPhone, new { htmlAttributes = new { @class = "form-control" } })
                                                            @Html.ValidationMessageFor(model => model.FatherPhone, "", new { @class = "text-danger" })
                                                        </div>

                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-md-6">
                                                <div class="panel panel-default">
                                                    <div class="panel-body">
                                                        <div class="form-group">
                                                            @Html.LabelFor(model => model.LocalAddress, htmlAttributes: new { @class = "control-label" })
                                                            @Html.EditorFor(model => model.LocalAddress, new { htmlAttributes = new { @class = "form-control" } })
                                                            @Html.ValidationMessageFor(model => model.LocalAddress, "", new { @class = "text-danger" })
                                                        </div>

                                                        <div class="form-group">
                                                            @Html.LabelFor(model => model.LocalCity, htmlAttributes: new { @class = "control-label" })
                                                            @Html.EditorFor(model => model.LocalCity, new { htmlAttributes = new { @class = "form-control" } })
                                                            @Html.ValidationMessageFor(model => model.LocalCity, "", new { @class = "text-danger" })
                                                        </div>

                                                        <div class="form-group">
                                                            @Html.LabelFor(model => model.LocalTaluka, htmlAttributes: new { @class = "control-label" })
                                                            @Html.EditorFor(model => model.LocalTaluka, new { htmlAttributes = new { @class = "form-control" } })
                                                            @Html.ValidationMessageFor(model => model.LocalTaluka, "", new { @class = "text-danger" })
                                                        </div>

                                                        <div class="form-group">
                                                            @Html.LabelFor(model => model.LocalDistrict, htmlAttributes: new { @class = "control-label" })
                                                            @Html.EditorFor(model => model.LocalDistrict, new { htmlAttributes = new { @class = "form-control" } })
                                                            @Html.ValidationMessageFor(model => model.LocalDistrict, "", new { @class = "text-danger" })
                                                        </div>

                                                        <div class="form-group">
                                                            @Html.LabelFor(model => model.LocalPhone, htmlAttributes: new { @class = "control-label" })
                                                            @Html.EditorFor(model => model.LocalPhone, new { htmlAttributes = new { @class = "form-control" } })
                                                            @Html.ValidationMessageFor(model => model.LocalPhone, "", new { @class = "text-danger" })
                                                        </div>
                                                        <div class="form-group">
                                                            @Html.LabelFor(model => model.EmailAddress, htmlAttributes: new { @class = "control-label" })
                                                            @Html.EditorFor(model => model.EmailAddress, new { htmlAttributes = new { @class = "form-control" } })
                                                            @Html.ValidationMessageFor(model => model.EmailAddress, "", new { @class = "text-danger" })
                                                        </div>

                                                    </div>
                                                </div>
                                            </div>
                                        </div>

                                        <div class="col-md-12">
                                            <div class="box box-primary">
                                                <div class="box-header with-border">
                                                    <h3 class="box-title"> Educational Details </h3>
                                                </div>
                                            </div>
                                            <div class="col-sm-6">
                                                <div class="panel panel-default">
                                                    <div class="panel-body">

                                                        <div class="form-group">
                                                            @Html.LabelFor(model => model.Course_ID, htmlAttributes: new { @class = "control-label" })
                                                            @Html.DropDownListFor(model => model.Course_ID, (IEnumerable<SelectListItem>
                                                            )ViewBag.Course_ID, new { @class = "form-control select2" })
                                                            @Html.ValidationMessageFor(model => model.Course_ID, "", new { @class = "text-danger" })
                                                        </div>

                                                        <div class="form-group">
                                                            @Html.LabelFor(model => model.Standard_ID, htmlAttributes: new { @class = "control-label" })
                                                            <select id="Standard_ID" name="Standard_ID" class="form-control hide-search" style="width:100%">
                                                                <option value="0"> -- Select Standard -- </option>
                                                            </select>
                                                            @*@Html.DropDownListFor(model => model.Standard_ID, (IEnumerable<SelectListItem>
                                                            )ViewBag.Standard_ID, "-- Select --", new { @class = "form-control select2" })*@
                                                            @Html.ValidationMessageFor(model => model.Standard_ID, "", new { @class = "text-danger" })
                                                        </div>

                                                        <div class="form-group">
                                                            @Html.LabelFor(model => model.Class_ID, htmlAttributes: new { @class = "control-label" })
                                                            <select id="Class_ID" name="Class_ID" class="form-control hide-search" style="width:100%">
                                                                <option value="0"> -- Select Class -- </option>
                                                            </select>
                                                            @*@Html.DropDownListFor(model => model.Class_ID, (IEnumerable<SelectListItem>
                                                            )ViewBag.Class_ID, "-- Select --", new { @class = "form-control select2" })*@
                                                            @Html.ValidationMessageFor(model => model.Class_ID, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-md-6">
                                                <div class="panel panel-default">
                                                    <div class="panel-body">
                                                        <div class="form-group">
                                                            @Html.LabelFor(model => model.Division_ID, htmlAttributes: new { @class = "control-label" })
                                                            <select id="Division_ID" name="Division_ID" class="form-control hide-search" style="width:100%">
                                                                <option value="0"> -- Select Division -- </option>
                                                            </select>
                                                            @*@Html.DropDownListFor(model => model.Division_ID, (IEnumerable<SelectListItem>
                                                            )ViewBag.Division_ID, "-- Select --", new { @class = "form-control select2" })*@
                                                            @Html.ValidationMessageFor(model => model.Division_ID, "", new { @class = "text-danger" })
                                                        </div>
                                                        <div class="form-group">
                                                            @Html.LabelFor(model => model.Student_Status_ID, htmlAttributes: new { @class = "control-label" })
                                                            @Html.DropDownListFor(model => model.Student_Status_ID, (IEnumerable<SelectListItem>
                                                            )ViewBag.Student_Status_ID, "-- Select --", new { @class = "form-control hide-search" })
                                                            @Html.ValidationMessageFor(model => model.Student_Status_ID, "", new { @class = "text-danger" })
                                                        </div>

                                                        <div class="form-group">
                                                            @Html.LabelFor(model => model.GR_No, htmlAttributes: new { @class = "control-label" })
                                                            @Html.EditorFor(model => model.GR_No, new { htmlAttributes = new { @class = "form-control" } })
                                                            @Html.ValidationMessageFor(model => model.GR_No, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-12">
                                            <div class="box-header">
                                                <center>
                                                    <button type="submit" value="Create" class="btn btn-primary">
                                                        Create
                                                    </button>
                                                </center>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    $(document).ready(function () {
        //$("#ddlmessage").empty();
        $("#Standard_ID").prop("disabled", true);
        $("#Class_ID").prop("disabled", true);
        $("#Division_ID").prop("disabled", true);

        // Fill Standard DropDown
        $("#Course_ID").change(function () {
            var Course_ID = $("#Course_ID").val();

            $.ajax({
                cache: false,
                type: "GET",
                url: '@Url.Action("GetStandard")',
                data: { "Course_ID": Course_ID },
                success: function (json, textStatus) {
                    $("#Standard_ID").empty();
                    $("#Standard_ID").append('<option value="0"> -- Select Standard -- </option>');
                    json = json || {};
                    if (json.length != 0) {
                        for (var i = 0; i < json.length; i++) {
                            $("#Standard_ID").append('<option value="' + json[i].Standard_ID + '">' + json[i].StandardName + '</option>');
                        }
                        $("#ddlmessage").empty();
                        $("#Standard_ID").prop("disabled", false);
                    }
                    else {
                        $("#ddlmessage").empty();


                        $("#Standard_ID").empty();
                        $("#Standard_ID").append('<option value="0"> -- Select Standard -- </option>');
                        $("#Standard_ID").select2({ minimumResultsForSearch: Infinity });
                        $("#Standard_ID").prop("disabled", true);

                        $("#Class_ID").empty();
                        $("#Class_ID").append('<option value="0"> -- Select Class -- </option>');
                        $("#Class_ID").select2({ minimumResultsForSearch: Infinity });
                        $("#Class_ID").prop("disabled", true);

                        $("#Division_ID").empty();
                        $("#Division_ID").append('<option value="0"> -- Select Division -- </option>');
                        $("#Division_ID").select2({ minimumResultsForSearch: Infinity });
                        $("#Division_ID").prop("disabled", true);


                        if ($("#Course_ID").val() != 0) {
                            $("#ddlmessage").append('No Standard Found.');
                        }
                    }
                }
            });
        });

        // Fill Class DropDown
        $("#Standard_ID").change(function () {
            var Standard_ID = $("#Standard_ID").val();
            $.ajax({
                cache: false,
                type: "GET",
                url: '@Url.Action("GetClass")',
                data: { "Standard_ID": Standard_ID },
                success: function (json, textStatus) {
                    $("#Class_ID").empty();
                    $("#Class_ID").append('<option value="0"> -- Select Class -- </option>');
                    json = json || {};
                    if (json.length != 0) {
                        for (var i = 0; i < json.length; i++) {
                            $("#Class_ID").append('<option value="' + json[i].Class_ID + '">' + json[i].ClassName + '</option>');
                        }
                        $("#ddlmessage").empty();
                        $("#Class_ID").prop("disabled", false);
                    }
                    else {
                        $("#ddlmessage").empty();

                        $("#Class_ID").empty();
                        $("#Class_ID").append('<option value="0"> -- Select Class -- </option>');
                        $("#Class_ID").select2({ minimumResultsForSearch: Infinity });
                        $("#Class_ID").prop("disabled", true);

                        if ($("#Standard_ID").val() != 0) {
                            $("#ddlmessage").append('No Class Found.');
                        }
                    }
                }
            });
        });

        $("#Class_ID").change(function () {
            var Division_ID = $("#Division_ID").val();
            $.ajax({
                cache: false,
                type: "GET",
                url: '@Url.Action("GetDivision")',
                data: { "Division_ID": Division_ID },
                success: function (json, textStatus) {
                    $("#Division_ID").empty();
                    $("#Division_ID").append('<option value="0"> -- Select Division -- </option>');
                    json = json || {};
                    if (json.length != 0) {
                        for (var i = 0; i < json.length; i++) {
                            $("#Division_ID").append('<option value="' + json[i].Division_ID + '">' + json[i].DivisionName + '</option>');
                        }
                        $("#ddlmessage").empty();
                        $("#Division_ID").prop("disabled", false);
                    }
                    else {
                        $("#ddlmessage").empty();

                        $("#Division_ID").empty();
                        $("#Division_ID").append('<option value="0"> -- Select Division -- </option>');
                        $("#Division_ID").select2({ minimumResultsForSearch: Infinity });
                        $("#Division_ID").prop("disabled", true);

                        if ($("#Class_ID").val() != 0) {
                            $("#ddlmessage").append('No Division Found.');
                        }
                    }
                }
            });
        });
    });
</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
